{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2efe8e89-99bc-4e36-8673-c0994163a878",
   "metadata": {},
   "source": [
    "## Problem Statement\n",
    "\n",
    "The snowboarding and marathon running communities represent vibrant and rapidly growing segments within the sports industry. The winter season in 2021 marked the highest number of active skiers and snowboarders in over 25 years, with a 26% increase in less than a decade; and for the first time, the directionality in interest for snowboarding outpaced that of skiing ([1](https://kenver.com/blogs/news/state-snow-sports)). Between 2008 and 2018, women's and men's marathon participation increased by 56.83% and 46.91%, respectively ([2](https://www.livestrong.com/article/13763749-marathon-statistics/)). \n",
    "\n",
    "These communities exhibit unique and shared preferences, needs, and desires, presenting a meaningful opportunity for sports apparel companies to cater to their specific requirements. By understanding, exploring, and attemtping to address the characteristics of these communities, sports apparel companies can capitalize on the opportunity to meet their diverse needs effectively, and members of the community themselves may maximize their performance by choosing the right brands, apparel, and accessories for them. \n",
    "\n",
    "For brands who would benefit from gaining more of the market share of these communities, such as Under Armour, Inc., this knowledge will empower them to develop tailored product offerings, refine marketing strategies, and strengthen their brand presence within these niche markets.  \n",
    "\n",
    "In this analysis we will.... We will start in this notebook gathering our data via the PRAW (Python Reddit API Wrapper) API packaage, exploring and cleaning our data ([second notebook](../code/02_Feature_Engineering.ipynb)), and transforming our variables into model-ready form whilst modeling across different classification options to ultimately find the best model that predicts which community a Reddit post came from ([third notebook](../code/03_Model_Building.ipynb)). At the end of this assignment, Under Armour will better understand how to leverage opportunities based on what the customers within these communities want. Ultimately, this shoudl help them establish themselves as the preferred choice for sports apparel among snowboarders and marathon runners, in turn driving business growth and fostering lasting customer relationships.\n",
    "\n",
    "For more information on the background, a summary of methods, and findings, please see the associated [README](../Farah_Malik_Proj2_README.md) for this analysis."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "145cda2c-cf85-46f6-a992-979cb871032e",
   "metadata": {},
   "source": [
    "### Contents:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "70d15af2-7c32-4529-a50c-78023707548b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting prawNote: you may need to restart the kernel to use updated packages.\n",
      "\n",
      "  Downloading praw-7.7.0-py3-none-any.whl (189 kB)\n",
      "     -------------------------------------- 189.4/189.4 kB 5.8 MB/s eta 0:00:00\n",
      "Collecting update-checker>=0.18\n",
      "  Downloading update_checker-0.18.0-py3-none-any.whl (7.0 kB)\n",
      "Collecting prawcore<3,>=2.1\n",
      "  Downloading prawcore-2.3.0-py3-none-any.whl (16 kB)\n",
      "Requirement already satisfied: websocket-client>=0.54.0 in c:\\users\\farah\\anaconda3\\lib\\site-packages (from praw) (0.58.0)\n",
      "Requirement already satisfied: requests<3.0,>=2.6.0 in c:\\users\\farah\\anaconda3\\lib\\site-packages (from prawcore<3,>=2.1->praw) (2.28.1)\n",
      "Requirement already satisfied: six in c:\\users\\farah\\anaconda3\\lib\\site-packages (from websocket-client>=0.54.0->praw) (1.16.0)\n",
      "Requirement already satisfied: charset-normalizer<3,>=2 in c:\\users\\farah\\anaconda3\\lib\\site-packages (from requests<3.0,>=2.6.0->prawcore<3,>=2.1->praw) (2.0.4)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\farah\\anaconda3\\lib\\site-packages (from requests<3.0,>=2.6.0->prawcore<3,>=2.1->praw) (2022.12.7)\n",
      "Requirement already satisfied: urllib3<1.27,>=1.21.1 in c:\\users\\farah\\anaconda3\\lib\\site-packages (from requests<3.0,>=2.6.0->prawcore<3,>=2.1->praw) (1.26.14)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\farah\\anaconda3\\lib\\site-packages (from requests<3.0,>=2.6.0->prawcore<3,>=2.1->praw) (3.4)\n",
      "Installing collected packages: update-checker, prawcore, praw\n",
      "Successfully installed praw-7.7.0 prawcore-2.3.0 update-checker-0.18.0\n"
     ]
    }
   ],
   "source": [
    "#pip install praw"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "36d4e90a-14d5-415e-896f-0374612b9eb3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'C:\\\\Users\\\\farah\\\\Documents\\\\General Assembly DSI\\\\DSI-508\\\\Projects\\\\project-3'"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import os\n",
    "os.getcwd()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "dd8e3945-7608-4dfb-895d-0234e5d6eaa5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'C:\\\\Users\\\\farah\\\\Documents\\\\General Assembly DSI\\\\DSI-508\\\\Projects\\\\project-3'"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "os.chdir('C:/Users/farah/Documents/General Assembly DSI/DSI-508/Projects/project-3')\n",
    "os.getcwd()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "67f3e3de-c03f-4f7b-9ef1-cd08eb3607cc",
   "metadata": {},
   "outputs": [],
   "source": [
    "import praw\n",
    "from creds import secrets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "af331822-0013-4276-8c13-00b00dd602a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "reddit = praw.Reddit(\n",
    "    client_id=secrets.get('client_id'),\n",
    "    client_secret=secrets.get('client_secret'),\n",
    "    user_agent=secrets.get('user_agent'),\n",
    "    username=secrets.get('username'),\n",
    "    password=secrets.get('password')\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "7188e636-443d-4b0a-b8dc-04e4e6a5a3a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "subreddit = reddit.subreddit('snowboardingnoobs')\n",
    "posts = subreddit.new(limit=600)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "6867658e-97d8-4266-b35c-9251d9afe8e1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.686523e+09</td>\n",
       "      <td>What board is this? Circa 2003</td>\n",
       "      <td>Not sure where to ask. I think this board was ...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0</td>\n",
       "      <td>snowboardingnoobs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.686505e+09</td>\n",
       "      <td>How to store after a run</td>\n",
       "      <td>After using my snowboard at the indoor slope i...</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>6</td>\n",
       "      <td>snowboardingnoobs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.686505e+09</td>\n",
       "      <td>Lib Tech Orca sizing</td>\n",
       "      <td>Hello! \\n\\nJust snagged a 2022 Orca on sale an...</td>\n",
       "      <td>3</td>\n",
       "      <td>0.81</td>\n",
       "      <td>8</td>\n",
       "      <td>snowboardingnoobs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.686432e+09</td>\n",
       "      <td>Extreme angles for mirrored duck stance and ho...</td>\n",
       "      <td>For now, I want to a mirrored duck stance to p...</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>9</td>\n",
       "      <td>snowboardingnoobs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.686407e+09</td>\n",
       "      <td>Need some soft bindings while the deals are hot</td>\n",
       "      <td>Currently have Union atlas pros but looking fo...</td>\n",
       "      <td>3</td>\n",
       "      <td>1.00</td>\n",
       "      <td>8</td>\n",
       "      <td>snowboardingnoobs</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    created_utc                                              title  \\\n",
       "0  1.686523e+09                     What board is this? Circa 2003   \n",
       "1  1.686505e+09                           How to store after a run   \n",
       "2  1.686505e+09                               Lib Tech Orca sizing   \n",
       "3  1.686432e+09  Extreme angles for mirrored duck stance and ho...   \n",
       "4  1.686407e+09    Need some soft bindings while the deals are hot   \n",
       "\n",
       "                                            selftext  score  upvote_ratio  \\\n",
       "0  Not sure where to ask. I think this board was ...      0          0.50   \n",
       "1  After using my snowboard at the indoor slope i...      2          1.00   \n",
       "2  Hello! \\n\\nJust snagged a 2022 Orca on sale an...      3          0.81   \n",
       "3  For now, I want to a mirrored duck stance to p...      2          1.00   \n",
       "4  Currently have Union atlas pros but looking fo...      3          1.00   \n",
       "\n",
       "   num_comments          subreddit  \n",
       "0             0  snowboardingnoobs  \n",
       "1             6  snowboardingnoobs  \n",
       "2             8  snowboardingnoobs  \n",
       "3             9  snowboardingnoobs  \n",
       "4             8  snowboardingnoobs  "
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "data = []\n",
    "for post in posts:\n",
    "    data.append([post.created_utc, post.title, post.selftext, post.score, post.upvote_ratio, post.num_comments, post.subreddit])\n",
    "\n",
    "snow = pd.DataFrame(data, columns = ['created_utc', 'title', 'selftext', 'score', 'upvote_ratio', 'num_comments', 'subreddit'])\n",
    "                                    \n",
    "snow.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "5de9bf44-d351-4b4e-add9-9cfa58da6343",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>599</th>\n",
       "      <td>1.678844e+09</td>\n",
       "      <td>right board for me?</td>\n",
       "      <td>\\n\\nI had a question because I can't find mu...</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4</td>\n",
       "      <td>snowboardingnoobs</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      created_utc                title  \\\n",
       "599  1.678844e+09  right board for me?   \n",
       "\n",
       "                                              selftext  score  upvote_ratio  \\\n",
       "599    \\n\\nI had a question because I can't find mu...      1           1.0   \n",
       "\n",
       "     num_comments          subreddit  \n",
       "599             4  snowboardingnoobs  "
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get earliest date among \"new\" threads\n",
    "snow.sort_values(by = 'created_utc').head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "c065254e-d63f-4d80-8606-3cc732d4f5cf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(600, 7)"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "snow.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "c64483b3-4607-4672-b6c6-d8100e91ad4e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Grab 700 threads that are \"top\" threads, but filter out anything that is after UTC = 1678844009\n",
    "    # hopefully leftover will be ~600\n",
    "subreddit = reddit.subreddit('snowboardingnoobs')\n",
    "posts = subreddit.top(limit=700)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "e97c2265-5320-4e37-8b01-b7a6edeb22a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.611235e+09</td>\n",
       "      <td>Watch and learn... [Spitzerphoto IG]</td>\n",
       "      <td></td>\n",
       "      <td>860</td>\n",
       "      <td>0.99</td>\n",
       "      <td>21</td>\n",
       "      <td>snowboardingnoobs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.620142e+09</td>\n",
       "      <td>Nightboarding 2.0 feat 6 huskies</td>\n",
       "      <td></td>\n",
       "      <td>814</td>\n",
       "      <td>0.98</td>\n",
       "      <td>35</td>\n",
       "      <td>snowboardingnoobs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.610246e+09</td>\n",
       "      <td>Made it down a hill and only fell once, so you...</td>\n",
       "      <td></td>\n",
       "      <td>655</td>\n",
       "      <td>0.99</td>\n",
       "      <td>21</td>\n",
       "      <td>snowboardingnoobs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.612562e+09</td>\n",
       "      <td>My 2 week progress (watching yt videos and obs...</td>\n",
       "      <td></td>\n",
       "      <td>565</td>\n",
       "      <td>1.00</td>\n",
       "      <td>84</td>\n",
       "      <td>snowboardingnoobs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.598179e+09</td>\n",
       "      <td>turns out learning to snowboard is harder than...</td>\n",
       "      <td></td>\n",
       "      <td>553</td>\n",
       "      <td>1.00</td>\n",
       "      <td>42</td>\n",
       "      <td>snowboardingnoobs</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    created_utc                                              title selftext  \\\n",
       "0  1.611235e+09               Watch and learn... [Spitzerphoto IG]            \n",
       "1  1.620142e+09                   Nightboarding 2.0 feat 6 huskies            \n",
       "2  1.610246e+09  Made it down a hill and only fell once, so you...            \n",
       "3  1.612562e+09  My 2 week progress (watching yt videos and obs...            \n",
       "4  1.598179e+09  turns out learning to snowboard is harder than...            \n",
       "\n",
       "   score  upvote_ratio  num_comments          subreddit  \n",
       "0    860          0.99            21  snowboardingnoobs  \n",
       "1    814          0.98            35  snowboardingnoobs  \n",
       "2    655          0.99            21  snowboardingnoobs  \n",
       "3    565          1.00            84  snowboardingnoobs  \n",
       "4    553          1.00            42  snowboardingnoobs  "
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = []\n",
    "for post in posts:\n",
    "    data.append([post.created_utc, post.title, post.selftext, post.score, post.upvote_ratio, post.num_comments, post.subreddit])\n",
    "\n",
    "snow2 = pd.DataFrame(data, columns = ['created_utc', 'title', 'selftext', 'score', 'upvote_ratio', 'num_comments', 'subreddit'])\n",
    "snow2 = snow2[snow2['created_utc'] < 1678844009]\n",
    "\n",
    "snow2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "66854f0d-bc20-4882-841c-53295652999d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(668, 7)"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "snow2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "658b445c-8015-45b1-9342-2834c447dd3a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>1.678740e+09</td>\n",
       "      <td>When you fit into a kid’s size and try to be t...</td>\n",
       "      <td></td>\n",
       "      <td>246</td>\n",
       "      <td>0.98</td>\n",
       "      <td>52</td>\n",
       "      <td>snowboardingnoobs</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     created_utc                                              title selftext  \\\n",
       "45  1.678740e+09  When you fit into a kid’s size and try to be t...            \n",
       "\n",
       "    score  upvote_ratio  num_comments          subreddit  \n",
       "45    246          0.98            52  snowboardingnoobs  "
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "snow2.sort_values(by = 'created_utc', ascending=False).head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "740ff7d1-6720-4181-a619-4ddfc2700e44",
   "metadata": {},
   "outputs": [],
   "source": [
    "snow_f = pd.concat([snow, snow2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "39a784cb-cd12-48fb-a1ab-48ed86a77117",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1268, 7)"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "snow_f.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9e7d3f69-ac52-4da1-85a4-0ec0cfd68517",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1635b00a-088e-4b54-9991-dc76f39e7b9f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d49a264f-1ed5-4ae5-83f4-8e5e8cdb5a32",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "94c9e893-4f12-4274-9b7b-6a8518872c6f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "36e49b72-7004-4c96-bb3c-bd8fbe5b49e8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "3e79c0cb-cbbf-4a58-850f-f3acb26442a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "subreddit = reddit.subreddit('marathonrunning')\n",
    "posts = subreddit.new(limit=800)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "999b976e-bf7d-45b8-8847-093049b783d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.589889e+09</td>\n",
       "      <td>Please fill in my survey about the online comm...</td>\n",
       "      <td>Hey fellow marathon runners 🏃‍♀️🏃, I need your...</td>\n",
       "      <td>7</td>\n",
       "      <td>0.89</td>\n",
       "      <td>6</td>\n",
       "      <td>marathonrunning</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.589725e+09</td>\n",
       "      <td>Half to a full marathon</td>\n",
       "      <td>Hi everyone, novice runner here. I was hoping ...</td>\n",
       "      <td>24</td>\n",
       "      <td>0.94</td>\n",
       "      <td>20</td>\n",
       "      <td>marathonrunning</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.589624e+09</td>\n",
       "      <td>Do you think a woman will ever hold the absolu...</td>\n",
       "      <td>Do you think a woman will ever hold the absolu...</td>\n",
       "      <td>17</td>\n",
       "      <td>0.83</td>\n",
       "      <td>26</td>\n",
       "      <td>marathonrunning</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.588081e+09</td>\n",
       "      <td>Chicago marathon..</td>\n",
       "      <td>As of right now, the website is stating that t...</td>\n",
       "      <td>17</td>\n",
       "      <td>0.92</td>\n",
       "      <td>3</td>\n",
       "      <td>marathonrunning</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.587957e+09</td>\n",
       "      <td>Corona made my first marathon digital, here we...</td>\n",
       "      <td></td>\n",
       "      <td>101</td>\n",
       "      <td>0.99</td>\n",
       "      <td>8</td>\n",
       "      <td>marathonrunning</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    created_utc                                              title  \\\n",
       "0  1.589889e+09  Please fill in my survey about the online comm...   \n",
       "1  1.589725e+09                            Half to a full marathon   \n",
       "2  1.589624e+09  Do you think a woman will ever hold the absolu...   \n",
       "3  1.588081e+09                                 Chicago marathon..   \n",
       "4  1.587957e+09  Corona made my first marathon digital, here we...   \n",
       "\n",
       "                                            selftext  score  upvote_ratio  \\\n",
       "0  Hey fellow marathon runners 🏃‍♀️🏃, I need your...      7          0.89   \n",
       "1  Hi everyone, novice runner here. I was hoping ...     24          0.94   \n",
       "2  Do you think a woman will ever hold the absolu...     17          0.83   \n",
       "3  As of right now, the website is stating that t...     17          0.92   \n",
       "4                                                       101          0.99   \n",
       "\n",
       "   num_comments        subreddit  \n",
       "0             6  marathonrunning  \n",
       "1            20  marathonrunning  \n",
       "2            26  marathonrunning  \n",
       "3             3  marathonrunning  \n",
       "4             8  marathonrunning  "
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = []\n",
    "for post in posts:\n",
    "    data.append([post.created_utc, post.title, post.selftext, post.score, post.upvote_ratio, post.num_comments, post.subreddit])\n",
    "\n",
    "mara = pd.DataFrame(data, columns = ['created_utc', 'title', 'selftext', 'score', 'upvote_ratio', 'num_comments', 'subreddit'])\n",
    "  \n",
    "mara.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "3132c6a1-2ccf-4f99-82c3-4dba4b95eb56",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(226, 7)"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mara.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "1da86545-af79-41c5-bd96-81884423ef79",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>225</th>\n",
       "      <td>1.346013e+09</td>\n",
       "      <td>What was it that got you to run your first mar...</td>\n",
       "      <td>For me it all started in 2002. I'd run track i...</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>marathonrunning</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      created_utc                                              title  \\\n",
       "225  1.346013e+09  What was it that got you to run your first mar...   \n",
       "\n",
       "                                              selftext  score  upvote_ratio  \\\n",
       "225  For me it all started in 2002. I'd run track i...      2           1.0   \n",
       "\n",
       "     num_comments        subreddit  \n",
       "225             1  marathonrunning  "
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get earliest date among \"new\" threads\n",
    "mara.sort_values(by = 'created_utc').head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "3cc0ebc9-079f-4196-9ec8-39e16e6c9794",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Grab 700 threads that are \"top\" threads, but filter out anything that is after UTC = 1508607009 jk 1346013009\n",
    "    # hopefully leftover will be ~600\n",
    "subreddit = reddit.subreddit('marathons')\n",
    "posts = subreddit.top(limit=700)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "435d1284-4a05-4a27-b3f7-e88b60ba8a08",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [created_utc, title, selftext, score, upvote_ratio, num_comments, subreddit]\n",
       "Index: []"
      ]
     },
     "execution_count": 152,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = []\n",
    "for post in posts:\n",
    "    data.append([post.created_utc, post.title, post.selftext, post.score, post.upvote_ratio, post.num_comments, post.subreddit])\n",
    "\n",
    "mara2 = pd.DataFrame(data, columns = ['created_utc', 'title', 'selftext', 'score', 'upvote_ratio', 'num_comments', 'subreddit'])\n",
    "mara2 = mara2[mara2['created_utc'] < 1346013009]\n",
    "\n",
    "mara2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "9267626e-8ec3-4a79-b795-dab1c3127465",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0, 7)"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mara2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "260408b6-1b99-4867-8f11-514365839645",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>387</th>\n",
       "      <td>1.508055e+09</td>\n",
       "      <td>Thousands turn out for Melbourne Marathon</td>\n",
       "      <td></td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>marathons</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      created_utc                                      title selftext  score  \\\n",
       "387  1.508055e+09  Thousands turn out for Melbourne Marathon               3   \n",
       "\n",
       "     upvote_ratio  num_comments  subreddit  \n",
       "387           1.0             2  marathons  "
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mara2.sort_values(by = 'created_utc', ascending=False).head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "05114191-520b-423c-91ea-fcfd5585e0cd",
   "metadata": {},
   "outputs": [],
   "source": [
    "mara_f = pd.concat([mara, mara2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "ff4ca27d-c598-4d04-8cbc-a805064b29e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(703, 7)"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mara_f.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "def937cc-9fb2-42b7-834c-fca3806b7f1d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3e4905d4-2647-481c-8d14-e27dd7bf0cf5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "b38d24e5-a1c7-4352-beff-5a62f9eb9b93",
   "metadata": {},
   "outputs": [],
   "source": [
    "mara_f.to_csv('./data/marathons.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "13e6d13c-51a9-4f23-85f6-a6092b9475f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "snow_f.to_csv('./data/snowboarding.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e4546d5-81ea-4621-8edc-0e13606d1c37",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a54b3185-437b-4e4c-9a6f-37c3697d1b44",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "b8d22030-aa23-411e-b811-092989fa5c74",
   "metadata": {},
   "outputs": [],
   "source": [
    "subreddit = reddit.subreddit('runninglifestyle')\n",
    "posts = subreddit.new(limit=600)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "de8a5e49-4d49-4d01-b22c-32eab17768c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.686514e+09</td>\n",
       "      <td>As the saying goes, who loses the night, loses...</td>\n",
       "      <td></td>\n",
       "      <td>2</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0</td>\n",
       "      <td>runninglifestyle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.686489e+09</td>\n",
       "      <td>Norway's Jakob Ingebrigtsen shatters 25-year-o...</td>\n",
       "      <td></td>\n",
       "      <td>19</td>\n",
       "      <td>0.96</td>\n",
       "      <td>3</td>\n",
       "      <td>runninglifestyle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.686460e+09</td>\n",
       "      <td>How accurate is the Garmin Race Predictor</td>\n",
       "      <td>Looking at the race time predictions on the Ga...</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1</td>\n",
       "      <td>runninglifestyle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.686430e+09</td>\n",
       "      <td>calf spams tips?</td>\n",
       "      <td>I have a long run with my team tomorrow I was ...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.67</td>\n",
       "      <td>2</td>\n",
       "      <td>runninglifestyle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.686355e+09</td>\n",
       "      <td>3 point start tips</td>\n",
       "      <td></td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1</td>\n",
       "      <td>runninglifestyle</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    created_utc                                              title  \\\n",
       "0  1.686514e+09  As the saying goes, who loses the night, loses...   \n",
       "1  1.686489e+09  Norway's Jakob Ingebrigtsen shatters 25-year-o...   \n",
       "2  1.686460e+09          How accurate is the Garmin Race Predictor   \n",
       "3  1.686430e+09                                   calf spams tips?   \n",
       "4  1.686355e+09                                 3 point start tips   \n",
       "\n",
       "                                            selftext  score  upvote_ratio  \\\n",
       "0                                                         2          0.75   \n",
       "1                                                        19          0.96   \n",
       "2  Looking at the race time predictions on the Ga...      2          1.00   \n",
       "3  I have a long run with my team tomorrow I was ...      1          0.67   \n",
       "4                                                         2          1.00   \n",
       "\n",
       "   num_comments         subreddit  \n",
       "0             0  runninglifestyle  \n",
       "1             3  runninglifestyle  \n",
       "2             1  runninglifestyle  \n",
       "3             2  runninglifestyle  \n",
       "4             1  runninglifestyle  "
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = []\n",
    "for post in posts:\n",
    "    data.append([post.created_utc, post.title, post.selftext, post.score, post.upvote_ratio, post.num_comments, post.subreddit])\n",
    "\n",
    "rlife = pd.DataFrame(data, columns = ['created_utc', 'title', 'selftext', 'score', 'upvote_ratio', 'num_comments', 'subreddit'])\n",
    "  \n",
    "rlife.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "d38aa70a-adf2-42a2-b252-64486e978e4d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(600, 7)"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rlife.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "31b6b2fb-7ba3-4568-b131-bb87066bafa8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>599</th>\n",
       "      <td>1.652986e+09</td>\n",
       "      <td>S00E06: Week 5 - Running &amp; Calisthenics</td>\n",
       "      <td></td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>runninglifestyle</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      created_utc                                    title selftext  score  \\\n",
       "599  1.652986e+09  S00E06: Week 5 - Running & Calisthenics               2   \n",
       "\n",
       "     upvote_ratio  num_comments         subreddit  \n",
       "599           1.0             0  runninglifestyle  "
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get earliest date among \"new\" threads\n",
    "rlife.sort_values(by = 'created_utc').head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "d827c906-b2ae-4e99-b5a3-47c5af56e08e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Grab 700 threads that are \"top\" threads, but filter out anything that is after UTC = 1652986009\n",
    "    # hopefully leftover will be ~600\n",
    "subreddit = reddit.subreddit('runninglifestyle')\n",
    "posts = subreddit.top(limit=700)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "ddac883c-9e86-4f6e-ad06-3406693357c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.631670e+09</td>\n",
       "      <td>If nothing changes nothing changes. 10 years h...</td>\n",
       "      <td></td>\n",
       "      <td>367</td>\n",
       "      <td>0.99</td>\n",
       "      <td>12</td>\n",
       "      <td>runninglifestyle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.606670e+09</td>\n",
       "      <td>The Secret No One Is Telling You About Hypervo...</td>\n",
       "      <td>Hey everyone, I'm a retired Physical Therapist...</td>\n",
       "      <td>328</td>\n",
       "      <td>0.99</td>\n",
       "      <td>32</td>\n",
       "      <td>runninglifestyle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.628869e+09</td>\n",
       "      <td>Did my first sub 40 minute 5k!</td>\n",
       "      <td></td>\n",
       "      <td>264</td>\n",
       "      <td>1.00</td>\n",
       "      <td>10</td>\n",
       "      <td>runninglifestyle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.595966e+09</td>\n",
       "      <td>Running styles</td>\n",
       "      <td></td>\n",
       "      <td>252</td>\n",
       "      <td>0.96</td>\n",
       "      <td>25</td>\n",
       "      <td>runninglifestyle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.629579e+09</td>\n",
       "      <td>Biggest treadmill ever</td>\n",
       "      <td></td>\n",
       "      <td>172</td>\n",
       "      <td>0.97</td>\n",
       "      <td>8</td>\n",
       "      <td>runninglifestyle</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    created_utc                                              title  \\\n",
       "0  1.631670e+09  If nothing changes nothing changes. 10 years h...   \n",
       "1  1.606670e+09  The Secret No One Is Telling You About Hypervo...   \n",
       "2  1.628869e+09                     Did my first sub 40 minute 5k!   \n",
       "3  1.595966e+09                                     Running styles   \n",
       "5  1.629579e+09                             Biggest treadmill ever   \n",
       "\n",
       "                                            selftext  score  upvote_ratio  \\\n",
       "0                                                       367          0.99   \n",
       "1  Hey everyone, I'm a retired Physical Therapist...    328          0.99   \n",
       "2                                                       264          1.00   \n",
       "3                                                       252          0.96   \n",
       "5                                                       172          0.97   \n",
       "\n",
       "   num_comments         subreddit  \n",
       "0            12  runninglifestyle  \n",
       "1            32  runninglifestyle  \n",
       "2            10  runninglifestyle  \n",
       "3            25  runninglifestyle  \n",
       "5             8  runninglifestyle  "
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = []\n",
    "for post in posts:\n",
    "    data.append([post.created_utc, post.title, post.selftext, post.score, post.upvote_ratio, post.num_comments, post.subreddit])\n",
    "\n",
    "rlife2 = pd.DataFrame(data, columns = ['created_utc', 'title', 'selftext', 'score', 'upvote_ratio', 'num_comments', 'subreddit'])\n",
    "rlife2 = rlife2[rlife2['created_utc'] < 1652986009]\n",
    "\n",
    "rlife2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "75d17e64-1795-4f2d-867f-cec5a7c8a8ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(548, 7)"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rlife2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "510863ed-f0de-4bfe-8728-f7d5428b8c80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>326</th>\n",
       "      <td>1.652905e+09</td>\n",
       "      <td>Training for a Marathon</td>\n",
       "      <td></td>\n",
       "      <td>17</td>\n",
       "      <td>0.82</td>\n",
       "      <td>0</td>\n",
       "      <td>runninglifestyle</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      created_utc                    title selftext  score  upvote_ratio  \\\n",
       "326  1.652905e+09  Training for a Marathon              17          0.82   \n",
       "\n",
       "     num_comments         subreddit  \n",
       "326             0  runninglifestyle  "
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rlife2.sort_values(by = 'created_utc', ascending=False).head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "651de8a8-5785-4055-a8c5-d1991c87ddb8",
   "metadata": {},
   "outputs": [],
   "source": [
    "rlife_f = pd.concat([rlife, rlife2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "3ce3eaa4-f30b-4b76-99ee-aeb53969f86d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1148, 7)"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rlife_f.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "b5e59e30-bd0e-43d4-8601-7a1b1e7c6309",
   "metadata": {},
   "outputs": [],
   "source": [
    "rlife_f.to_csv('./data/running_lifestyle.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e50be2c1-dba0-4963-b5a8-4871b6d63e8b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f22353f5-b87f-4c31-ba2e-c4537aa1cd43",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "43de6a33-80a0-42af-a806-d7974aafd1a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "subreddit = reddit.subreddit('skiing')\n",
    "posts = subreddit.new(limit=600)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "f04f5a42-d644-41f0-86e7-913bb7e38693",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.686569e+09</td>\n",
       "      <td>Killington 6/11/23 (Ignore the black flies)</td>\n",
       "      <td>Awesome east coast skiing at killington yester...</td>\n",
       "      <td>24</td>\n",
       "      <td>0.88</td>\n",
       "      <td>3</td>\n",
       "      <td>skiing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.686559e+09</td>\n",
       "      <td>What's everyone's opinion for the best online ...</td>\n",
       "      <td></td>\n",
       "      <td>5</td>\n",
       "      <td>0.67</td>\n",
       "      <td>12</td>\n",
       "      <td>skiing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.686542e+09</td>\n",
       "      <td>Is this considered a chute?</td>\n",
       "      <td></td>\n",
       "      <td>150</td>\n",
       "      <td>0.92</td>\n",
       "      <td>41</td>\n",
       "      <td>skiing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.686541e+09</td>\n",
       "      <td>Condition Report For Central Wasatch +Line Rec...</td>\n",
       "      <td>[https://youtu.be/7qYTAQlMHa4](https://youtu.b...</td>\n",
       "      <td>6</td>\n",
       "      <td>0.81</td>\n",
       "      <td>3</td>\n",
       "      <td>skiing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.686525e+09</td>\n",
       "      <td>Can someone identify these old school skis?</td>\n",
       "      <td>I started downhill (resort) skiing last season...</td>\n",
       "      <td>3</td>\n",
       "      <td>0.62</td>\n",
       "      <td>11</td>\n",
       "      <td>skiing</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    created_utc                                              title  \\\n",
       "0  1.686569e+09        Killington 6/11/23 (Ignore the black flies)   \n",
       "1  1.686559e+09  What's everyone's opinion for the best online ...   \n",
       "2  1.686542e+09                        Is this considered a chute?   \n",
       "3  1.686541e+09  Condition Report For Central Wasatch +Line Rec...   \n",
       "4  1.686525e+09        Can someone identify these old school skis?   \n",
       "\n",
       "                                            selftext  score  upvote_ratio  \\\n",
       "0  Awesome east coast skiing at killington yester...     24          0.88   \n",
       "1                                                         5          0.67   \n",
       "2                                                       150          0.92   \n",
       "3  [https://youtu.be/7qYTAQlMHa4](https://youtu.b...      6          0.81   \n",
       "4  I started downhill (resort) skiing last season...      3          0.62   \n",
       "\n",
       "   num_comments subreddit  \n",
       "0             3    skiing  \n",
       "1            12    skiing  \n",
       "2            41    skiing  \n",
       "3             3    skiing  \n",
       "4            11    skiing  "
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = []\n",
    "for post in posts:\n",
    "    data.append([post.created_utc, post.title, post.selftext, post.score, post.upvote_ratio, post.num_comments, post.subreddit])\n",
    "\n",
    "ski = pd.DataFrame(data, columns = ['created_utc', 'title', 'selftext', 'score', 'upvote_ratio', 'num_comments', 'subreddit'])\n",
    "  \n",
    "ski.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "137dad44-6435-4052-8559-97ae0b1cebc6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(600, 7)"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ski.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "51adc446-5e45-42bf-9ed1-4770b993d683",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>599</th>\n",
       "      <td>1.682409e+09</td>\n",
       "      <td>Trying to join ski patrol; advice, tips, thing...</td>\n",
       "      <td>I’m currently an assistant manager at a retail...</td>\n",
       "      <td>16</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28</td>\n",
       "      <td>skiing</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      created_utc                                              title  \\\n",
       "599  1.682409e+09  Trying to join ski patrol; advice, tips, thing...   \n",
       "\n",
       "                                              selftext  score  upvote_ratio  \\\n",
       "599  I’m currently an assistant manager at a retail...     16           1.0   \n",
       "\n",
       "     num_comments subreddit  \n",
       "599            28    skiing  "
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get earliest date among \"new\" threads\n",
    "ski.sort_values(by = 'created_utc').head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "24ce07cf-15d7-459d-bd1b-68c81dbe1169",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Grab 700 threads that are \"top\" threads, but filter out anything that is after UTC = 1682409009\n",
    "    # hopefully leftover will be ~600\n",
    "subreddit = reddit.subreddit('skiing')\n",
    "posts = subreddit.top(limit=700)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "fc44ed7d-cb80-4bf8-bb92-505200ae1d74",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.608393e+09</td>\n",
       "      <td>My friend Alex falling getting stuck to the li...</td>\n",
       "      <td></td>\n",
       "      <td>10106</td>\n",
       "      <td>0.99</td>\n",
       "      <td>370</td>\n",
       "      <td>skiing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.617465e+09</td>\n",
       "      <td>Lost my ikon pass for the rest of the season f...</td>\n",
       "      <td></td>\n",
       "      <td>9922</td>\n",
       "      <td>0.91</td>\n",
       "      <td>717</td>\n",
       "      <td>skiing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.682197e+09</td>\n",
       "      <td>Got the backflip skuggle</td>\n",
       "      <td></td>\n",
       "      <td>9066</td>\n",
       "      <td>0.97</td>\n",
       "      <td>144</td>\n",
       "      <td>skiing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.670433e+09</td>\n",
       "      <td>I guess we're the 1% now...?</td>\n",
       "      <td></td>\n",
       "      <td>8066</td>\n",
       "      <td>0.88</td>\n",
       "      <td>1015</td>\n",
       "      <td>skiing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.479741e+09</td>\n",
       "      <td>I'm here to ski, that's it. Already extremely ...</td>\n",
       "      <td></td>\n",
       "      <td>7490</td>\n",
       "      <td>0.87</td>\n",
       "      <td>352</td>\n",
       "      <td>skiing</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    created_utc                                              title selftext  \\\n",
       "0  1.608393e+09  My friend Alex falling getting stuck to the li...            \n",
       "1  1.617465e+09  Lost my ikon pass for the rest of the season f...            \n",
       "2  1.682197e+09                           Got the backflip skuggle            \n",
       "4  1.670433e+09                       I guess we're the 1% now...?            \n",
       "5  1.479741e+09  I'm here to ski, that's it. Already extremely ...            \n",
       "\n",
       "   score  upvote_ratio  num_comments subreddit  \n",
       "0  10106          0.99           370    skiing  \n",
       "1   9922          0.91           717    skiing  \n",
       "2   9066          0.97           144    skiing  \n",
       "4   8066          0.88          1015    skiing  \n",
       "5   7490          0.87           352    skiing  "
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = []\n",
    "for post in posts:\n",
    "    data.append([post.created_utc, post.title, post.selftext, post.score, post.upvote_ratio, post.num_comments, post.subreddit])\n",
    "\n",
    "ski2 = pd.DataFrame(data, columns = ['created_utc', 'title', 'selftext', 'score', 'upvote_ratio', 'num_comments', 'subreddit'])\n",
    "ski2 = ski2[ski2['created_utc'] < 1682409009]\n",
    "\n",
    "ski2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "439a9a8a-a50e-434c-9683-6aec88df90a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(678, 7)"
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ski2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "0fa99958-6dcb-41ca-9e45-793b6f50de2c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_utc</th>\n",
       "      <th>title</th>\n",
       "      <th>selftext</th>\n",
       "      <th>score</th>\n",
       "      <th>upvote_ratio</th>\n",
       "      <th>num_comments</th>\n",
       "      <th>subreddit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>261</th>\n",
       "      <td>1.682342e+09</td>\n",
       "      <td>The T-Bar sign we all need (Copper, CO)</td>\n",
       "      <td>I appreciate the humor but also think this is ...</td>\n",
       "      <td>2296</td>\n",
       "      <td>0.98</td>\n",
       "      <td>215</td>\n",
       "      <td>skiing</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      created_utc                                    title  \\\n",
       "261  1.682342e+09  The T-Bar sign we all need (Copper, CO)   \n",
       "\n",
       "                                              selftext  score  upvote_ratio  \\\n",
       "261  I appreciate the humor but also think this is ...   2296          0.98   \n",
       "\n",
       "     num_comments subreddit  \n",
       "261           215    skiing  "
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ski2.sort_values(by = 'created_utc', ascending=False).head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "9670a2ad-b28f-4638-b313-280a6fb92f1f",
   "metadata": {},
   "outputs": [],
   "source": [
    "ski_f = pd.concat([ski, ski2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "77827bb5-f75a-47b5-b2e3-1de95ce5e5c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1278, 7)"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ski_f.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "e59116a4-311f-4aa4-89c2-30f4439cc60f",
   "metadata": {},
   "outputs": [],
   "source": [
    "ski_f.to_csv('./data/skiing.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c7b68e69-8b25-446d-8b8e-749a027eabdc",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
